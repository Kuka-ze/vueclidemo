{"remainingRequest":"/Users/lize/github/vue练习/vueclidemo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lize/github/vue练习/vueclidemo/src/components/login/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lize/github/vue练习/vueclidemo/src/components/login/login.vue","mtime":1590235477091},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnbG9naW4nLAogIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgZGlhbG9nRm9ybVZpc2libGU6IGZhbHNlLAogICAgICBmb3JtZGF0YTogewogICAgICAgIHVzZXJfbmFtZTogJycsCiAgICAgICAgdXNlcl9wYXNzd29yZDogJycsCiAgICAgIH0sCiAgICAgIHJ1bGVGb3JtOiB7CiAgICAgICAgdXNlcl9uYW1lOiAnJywKICAgICAgICB1c2VyX3Bhc3N3b3JkOiAnJywKICAgICAgfSwKICAgICAgcnVsZXM6IHsKICAgICAgICB1c2VyX25hbWU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXlkI3lrZcnLCB0cmlnZ2VyOiAnYmx1cicgfSwKICAgICAgICBdLAogICAgICAgIHVzZXJfcGFzc3dvcmQ6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXlr4bnoIEnLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0sCiAgICAgIH0KICAgIH0KICB9LAogIGNyZWF0ZWQgKCkgewoKICB9LAogIG1ldGhvZHM6IHsKICAgIHJlZ2lzdGVyICgpIHsKICAgICAgLy/ms6jlhozmlrnms5UKICAgICAgdGhpcy4kaHR0cC5wb3N0KCdodHRwczovL3Jlc3VsdC5lb2xpbmtlci5jb20vczVDRlZ2ZWMwNjFkY2IwZTZhZTliYWFkZjU1NjJjODRjMzFmZjMxM2IyMTU3OGU/dXJpPS9kZW1vL3VzZXIvcmVnaXN0ZXInLCB0aGlzLmZvcm1kYXRhKS50aGVuKHJlcyA9PiB7CiAgICAgICAgY29uc29sZS5sb2coJ3N1Y2Nlc3MnLCByZXMpCiAgICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlCiAgICAgIH0pLmNhdGNoKChlcnIpID0+IHsKICAgICAgICBjb25zb2xlLmxvZygnZXJyb3InLCBlcnIpCiAgICAgIH0pOwogICAgfSwKICAgIGhhbmRsZWxvZ2luICgpIHsKICAgICAgLy/nmbvpmYbmlrnms5UKICAgICAgdGhpcy4kaHR0cC5wb3N0KCdodHRwczovL21vY2thcGkuZW9saW5rZXIuY29tL3M1Q0ZWdmVjMDYxZGNiMGU2YWU5YmFhZGY1NTYyYzg0YzMxZmYzMTNiMjE1NzhlL2RlbW8vdXNlci9sb2dpbicsIHRoaXMucnVsZUZvcm0pLnRoZW4ocmVzID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXMpCgogICAgICAgIC8vIDHjgIHlsIbnmbvpmYbmiJDlip/kuYvlkI7nmoR0b2tlbiwg5L+d5a2Y5Yiw5a6i5oi356uv55qEc2Vzc2lvblN0b3JhZ2XkuK07IGxvY2FsU3RvcmFnZeS4reaYr+aMgeS5heWMlueahOS/neWtmAogICAgICAgIC8vICAgMS4xIOmhueebruS4reWHuueOsOS6hueZu+W9leS5i+WklueahOWFtuS7lkFQSeaOpeWPo++8jOW/hemhu+WcqOeZu+mZhuS5i+WQjuaJjeiDveiuv+mXrgogICAgICAgIC8vICAgMS4yIHRva2VuIOWPquW6lOWcqOW9k+WJjee9keermeaJk+W8gOacn+mXtOeUn+aViO+8jOaJgOS7peWwhnRva2Vu5L+d5a2Y5Zyoc2Vzc2lvblN0b3JhZ2XkuK0KICAgICAgICB3aW5kb3cuc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgndG9rZW4nLCByZXMuZGF0YS50b2tlbikKICAgICAgICAvLyAy44CB6YCa6L+H57yW56iL5byP5a+86Iiq6Lez6L2s5Yiw5ZCO5Y+w5Li76aG1LCDot6/nlLHlnLDlnYDkuLrvvJovaG9tZQogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvaG9tZScpCiAgICAgIH0pLmNhdGNoKChlcnIpID0+IHsKICAgICAgICBjb25zb2xlLmxvZygnZXJyb3InLCBlcnIpCiAgICAgIH0pOwogICAgfSwKCiAgICBzdWJtaXRGb3JtICgpIHsKICAgICAgLy/mj5DkuqTmlrnms5UKICAgICAgdGhpcy4kcmVmcy5ydWxlRm9ybS52YWxpZGF0ZSgodmFsaWQpID0+IHsKICAgICAgICBpZiAodmFsaWQpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCfmj5DkuqTnmoTooajljZUnLCB0aGlzLnJ1bGVGb3JtKQogICAgICAgICAgdGhpcy5oYW5kbGVsb2dpbigpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciBzdWJtaXQhIScpOwogICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogIH0KfQo="},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/components/login","sourcesContent":["<template>\n  <div class=\"login-wrap\">\n    <el-form class=\"login-form\" :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\">\n      <div class=\"login-form-wrap\">\n        <h2>用户登陆</h2>\n        <h4 style=\"color:#0f33f0;cursor:pointer;\" @click=\"dialogFormVisible = true\">注册</h4>\n      </div>\n      <el-form-item label=\"用户名\" prop=\"user_name\">\n        <el-input v-model=\"ruleForm.user_name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"user_password\">\n        <el-input type=\"password\" v-model=\"ruleForm.user_password\"></el-input>\n      </el-form-item>\n      <el-button class='login-btn' type=\"primary\" @click=\"submitForm(ruleForm)\">登陆</el-button>\n    </el-form>\n    <!-- //弹出框 -->\n    <el-dialog title=\"请注册您的用户信息\" :visible.sync=\"dialogFormVisible\">\n      <el-form :model=\"formdata\">\n        <el-form-item label=\"用户名\" prop=\"user_name\">\n          <el-input v-model=\"formdata.user_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"user_password\">\n          <el-input type=\"password\" v-model=\"formdata.user_password\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"register\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'login',\n  data () {\n    return {\n      dialogFormVisible: false,\n      formdata: {\n        user_name: '',\n        user_password: '',\n      },\n      ruleForm: {\n        user_name: '',\n        user_password: '',\n      },\n      rules: {\n        user_name: [\n          { required: true, message: '请输入名字', trigger: 'blur' },\n        ],\n        user_password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ],\n      }\n    }\n  },\n  created () {\n\n  },\n  methods: {\n    register () {\n      //注册方法\n      this.$http.post('https://result.eolinker.com/s5CFVvec061dcb0e6ae9baadf5562c84c31ff313b21578e?uri=/demo/user/register', this.formdata).then(res => {\n        console.log('success', res)\n        this.dialogFormVisible = false\n      }).catch((err) => {\n        console.log('error', err)\n      });\n    },\n    handlelogin () {\n      //登陆方法\n      this.$http.post('https://mockapi.eolinker.com/s5CFVvec061dcb0e6ae9baadf5562c84c31ff313b21578e/demo/user/login', this.ruleForm).then(res => {\n        console.log(res)\n\n        // 1、将登陆成功之后的token, 保存到客户端的sessionStorage中; localStorage中是持久化的保存\n        //   1.1 项目中出现了登录之外的其他API接口，必须在登陆之后才能访问\n        //   1.2 token 只应在当前网站打开期间生效，所以将token保存在sessionStorage中\n        window.sessionStorage.setItem('token', res.data.token)\n        // 2、通过编程式导航跳转到后台主页, 路由地址为：/home\n        this.$router.push('/home')\n      }).catch((err) => {\n        console.log('error', err)\n      });\n    },\n\n    submitForm () {\n      //提交方法\n      this.$refs.ruleForm.validate((valid) => {\n        if (valid) {\n          console.log('提交的表单', this.ruleForm)\n          this.handlelogin()\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n  }\n}\n</script>\n\n<style>\n.login-wrap {\n  height: 100%;\n  background: #324152;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.login-wrap .login-form {\n  width: 400px;\n  background: #ffffff;\n  padding: 30px;\n}\n.login-form-wrap {\n  display: flex;\n  justify-content: space-between;\n}\n.login-btn {\n  width: 100%;\n}\n</style>"]}]}
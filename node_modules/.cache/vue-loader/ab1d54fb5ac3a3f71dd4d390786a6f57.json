{"remainingRequest":"/Users/lize/github/vue练习/vueclidemo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lize/github/vue练习/vueclidemo/src/components/login/login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/lize/github/vue练习/vueclidemo/src/components/login/login.vue","mtime":1592403648728},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubG9naW4td3JhcCB7CiAgaGVpZ2h0OiAxMDAlOwogIGJhY2tncm91bmQ6ICMzMjQxNTI7CiAgZGlzcGxheTogZmxleDsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9Ci5sb2dpbi13cmFwIC5sb2dpbi1mb3JtIHsKICB3aWR0aDogNDAwcHg7CiAgYmFja2dyb3VuZDogI2ZmZmZmZjsKICBwYWRkaW5nOiAzMHB4Owp9Ci5sb2dpbi1mb3JtLXdyYXAgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwp9Ci5sb2dpbi1idG4gewogIHdpZHRoOiAxMDAlOwp9Cg=="},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/components/login","sourcesContent":["<template>\n  <div class=\"login-wrap\">\n    <el-form class=\"login-form\" :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\">\n      <div class=\"login-form-wrap\">\n        <h2>用户登陆</h2>\n        <h4 style=\"color:#0f33f0;cursor:pointer;\" @click=\"dialogFormVisible = true\">注册</h4>\n      </div>\n      <el-form-item label=\"用户名\" prop=\"user_name\">\n        <el-input v-model=\"ruleForm.user_name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"密码\" prop=\"user_password\">\n        <el-input type=\"password\" v-model=\"ruleForm.user_password\"></el-input>\n      </el-form-item>\n      <el-button class='login-btn' type=\"primary\" @click=\"submitForm(ruleForm)\">登陆</el-button>\n    </el-form>\n    <!-- //弹出框 -->\n    <el-dialog title=\"请注册您的用户信息\" :visible.sync=\"dialogFormVisible\">\n      <el-form :model=\"formdata\">\n        <el-form-item label=\"用户名\" prop=\"user_name\">\n          <el-input v-model=\"formdata.user_name\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"密码\" prop=\"user_password\">\n          <el-input type=\"password\" v-model=\"formdata.user_password\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"register\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'login',\n  data () {\n    return {\n      dialogFormVisible: false,\n      formdata: {\n        user_name: '',\n        user_password: '',\n      },\n      ruleForm: {\n        user_name: '',\n        user_password: '',\n      },\n      rules: {\n        user_name: [\n          { required: true, message: '请输入名字', trigger: 'blur' },\n        ],\n        user_password: [\n          { required: true, message: '请输入密码', trigger: 'blur' }\n        ],\n      }\n    }\n  },\n  created () {\n\n  },\n  methods: {\n    register () {\n      //注册方法\n      this.$http.post('https://result.eolinker.com/s5CFVvec061dcb0e6ae9baadf5562c84c31ff313b21578e?uri=/demo/user/register', this.formdata).then(res => {\n        console.log('success', res)\n        this.dialogFormVisible = false\n      }).catch((err) => {\n        console.log('error', err)\n      });\n    },\n    async handlelogin () {\n      //登陆方法\n      const url = 'https://mockapi.eolinker.com/s5CFVvec061dcb0e6ae9baadf5562c84c31ff313b21578e/demo/user/login'\n      const res = await this.$http.post(url, this.ruleForm)\n      const { data } = res.data\n      if (status === 200) {\n        this.$router.push('/home')\n        console.log(data)\n      } else {\n        //   \n        console.log('msg')\n      }\n      //   this.$http.post('https://mockapi.eolinker.com/s5CFVvec061dcb0e6ae9baadf5562c84c31ff313b21578e/demo/user/login', this.ruleForm).then(res => {\n      //     console.log(res)\n      //     this.$router.push('/home')\n      //   }).catch((err) => {\n      //     console.log('error', err)\n      //   });\n    },\n\n    submitForm () {\n      //提交方法\n      this.$refs.ruleForm.validate((valid) => {\n        if (valid) {\n          console.log('提交的表单', this.ruleForm)\n          this.handlelogin()\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n  }\n}\n</script>\n\n<style>\n.login-wrap {\n  height: 100%;\n  background: #324152;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.login-wrap .login-form {\n  width: 400px;\n  background: #ffffff;\n  padding: 30px;\n}\n.login-form-wrap {\n  display: flex;\n  justify-content: space-between;\n}\n.login-btn {\n  width: 100%;\n}\n</style>"]}]}
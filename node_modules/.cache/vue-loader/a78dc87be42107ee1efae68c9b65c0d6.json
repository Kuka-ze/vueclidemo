{"remainingRequest":"/Users/lize/github/vue练习/vueclidemo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lize/github/vue练习/vueclidemo/src/components/Welcome.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lize/github/vue练习/vueclidemo/src/components/Welcome.vue","mtime":1590235797437},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/lize/github/vue练习/vueclidemo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIDEu5a+85YWlZWNoYXJ0cwppbXBvcnQgZWNoYXJ0cyBmcm9tICdlY2hhcnRzJwoKZXhwb3J0IGRlZmF1bHQgewogIC8vIOatpOaXtizpobXpnaLkuIrnmoTlhYPntKAs5bey57uP6KKr5riy5p+T5a6M5q+V5LqGCiAgYXN5bmMgbW91bnRlZCAoKSB7CiAgICAvLyAzLuWfuuS6juWHhuWkh+WlveeahGRvbe+8jOWIneWni+WMlmVjaGFydHPlrp7kvosKICAgIHZhciBteUNoYXJ0ID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYWluJykpCiAgICAvLyA0LuWHhuWkh+aVsOaNrumhueWSjOmFjee9rumhuQogICAgLy8g5oyH5a6a5Zu+6KGo55qE6YWN572u6aG55ZKM5pWw5o2uCiAgICB2YXIgb3B0aW9uID0gewogICAgICBsZWdlbmQ6IHt9LAogICAgICB0b29sdGlwOiB7CiAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgIHNob3dDb250ZW50OiBmYWxzZQogICAgICB9LAogICAgICBkYXRhc2V0OiB7CiAgICAgICAgc291cmNlOiBbCiAgICAgICAgICBbJ3Byb2R1Y3QnLCAnMjAxMicsICcyMDEzJywgJzIwMTQnLCAnMjAxNScsICcyMDE2JywgJzIwMTcnXSwKICAgICAgICAgIFsnTWF0Y2hhIExhdHRlJywgNDEuMSwgMzAuNCwgNjUuMSwgNTMuMywgODMuOCwgOTguN10sCiAgICAgICAgICBbJ01pbGsgVGVhJywgODYuNSwgOTIuMSwgODUuNywgODMuMSwgNzMuNCwgNTUuMV0sCiAgICAgICAgICBbJ0NoZWVzZSBDb2NvYScsIDI0LjEsIDY3LjIsIDc5LjUsIDg2LjQsIDY1LjIsIDgyLjVdLAogICAgICAgICAgWydXYWxudXQgQnJvd25pZScsIDU1LjIsIDY3LjEsIDY5LjIsIDcyLjQsIDUzLjksIDM5LjFdCiAgICAgICAgXQogICAgICB9LAogICAgICB4QXhpczogeyB0eXBlOiAnY2F0ZWdvcnknIH0sCiAgICAgIHlBeGlzOiB7IGdyaWRJbmRleDogMCB9LAogICAgICBncmlkOiB7IHRvcDogJzU1JScgfSwKICAgICAgc2VyaWVzOiBbCiAgICAgICAgeyB0eXBlOiAnbGluZScsIHNtb290aDogdHJ1ZSwgc2VyaWVzTGF5b3V0Qnk6ICdyb3cnIH0sCiAgICAgICAgeyB0eXBlOiAnbGluZScsIHNtb290aDogdHJ1ZSwgc2VyaWVzTGF5b3V0Qnk6ICdyb3cnIH0sCiAgICAgICAgeyB0eXBlOiAnbGluZScsIHNtb290aDogdHJ1ZSwgc2VyaWVzTGF5b3V0Qnk6ICdyb3cnIH0sCiAgICAgICAgeyB0eXBlOiAnbGluZScsIHNtb290aDogdHJ1ZSwgc2VyaWVzTGF5b3V0Qnk6ICdyb3cnIH0sCiAgICAgICAgewogICAgICAgICAgdHlwZTogJ3BpZScsCiAgICAgICAgICBpZDogJ3BpZScsCiAgICAgICAgICByYWRpdXM6ICczMCUnLAogICAgICAgICAgY2VudGVyOiBbJzUwJScsICcyNSUnXSwKICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgIGZvcm1hdHRlcjogJ3tifToge0AyMDEyfSAoe2R9JSknCiAgICAgICAgICB9LAogICAgICAgICAgZW5jb2RlOiB7CiAgICAgICAgICAgIGl0ZW1OYW1lOiAncHJvZHVjdCcsCiAgICAgICAgICAgIHZhbHVlOiAnMjAxMicsCiAgICAgICAgICAgIHRvb2x0aXA6ICcyMDEyJwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfQoKICAgIG15Q2hhcnQub24oJ3VwZGF0ZUF4aXNQb2ludGVyJywgZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgIHZhciB4QXhpc0luZm8gPSBldmVudC5heGVzSW5mb1swXQogICAgICBpZiAoeEF4aXNJbmZvKSB7CiAgICAgICAgdmFyIGRpbWVuc2lvbiA9IHhBeGlzSW5mby52YWx1ZSArIDEKICAgICAgICBteUNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgICBzZXJpZXM6IHsKICAgICAgICAgICAgaWQ6ICdwaWUnLAogICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgIGZvcm1hdHRlcjogJ3tifToge0BbJyArIGRpbWVuc2lvbiArICddfSAoe2R9JSknCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVuY29kZTogewogICAgICAgICAgICAgIHZhbHVlOiBkaW1lbnNpb24sCiAgICAgICAgICAgICAgdG9vbHRpcDogZGltZW5zaW9uCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9KQogICAgICB9CiAgICB9KQogICAgLy8g5pWw5o2u5ZCI5bm2CiAgICAvLyAgY29uc3QgcmVzdWx0ID0gXy5tZXJnZShyZXMuZGF0YSwgdGhpcy5vcHRpb25zKQogICAgLy8gNS7lsZXnpLrmlbDmja4KICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbikKICB9Cn0K"},{"version":3,"sources":["Welcome.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Welcome.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <!-- 2.为Echarts准备一个Dom -->\n    <el-row>\n      <el-col :span=\"16\">\n        <div id=\"main\" style=\"width: 1000px;height:600px;\"></div>\n      </el-col>\n      <el-col :span=\"6\">\n        <p>欢迎一起学习讨论</p>\n        <p>QQ: 1191448939</p>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script>\n// 1.导入echarts\nimport echarts from 'echarts'\n\nexport default {\n  // 此时,页面上的元素,已经被渲染完毕了\n  async mounted () {\n    // 3.基于准备好的dom，初始化echarts实例\n    var myChart = echarts.init(document.getElementById('main'))\n    // 4.准备数据项和配置项\n    // 指定图表的配置项和数据\n    var option = {\n      legend: {},\n      tooltip: {\n        trigger: 'axis',\n        showContent: false\n      },\n      dataset: {\n        source: [\n          ['product', '2012', '2013', '2014', '2015', '2016', '2017'],\n          ['Matcha Latte', 41.1, 30.4, 65.1, 53.3, 83.8, 98.7],\n          ['Milk Tea', 86.5, 92.1, 85.7, 83.1, 73.4, 55.1],\n          ['Cheese Cocoa', 24.1, 67.2, 79.5, 86.4, 65.2, 82.5],\n          ['Walnut Brownie', 55.2, 67.1, 69.2, 72.4, 53.9, 39.1]\n        ]\n      },\n      xAxis: { type: 'category' },\n      yAxis: { gridIndex: 0 },\n      grid: { top: '55%' },\n      series: [\n        { type: 'line', smooth: true, seriesLayoutBy: 'row' },\n        { type: 'line', smooth: true, seriesLayoutBy: 'row' },\n        { type: 'line', smooth: true, seriesLayoutBy: 'row' },\n        { type: 'line', smooth: true, seriesLayoutBy: 'row' },\n        {\n          type: 'pie',\n          id: 'pie',\n          radius: '30%',\n          center: ['50%', '25%'],\n          label: {\n            formatter: '{b}: {@2012} ({d}%)'\n          },\n          encode: {\n            itemName: 'product',\n            value: '2012',\n            tooltip: '2012'\n          }\n        }\n      ]\n    }\n\n    myChart.on('updateAxisPointer', function (event) {\n      var xAxisInfo = event.axesInfo[0]\n      if (xAxisInfo) {\n        var dimension = xAxisInfo.value + 1\n        myChart.setOption({\n          series: {\n            id: 'pie',\n            label: {\n              formatter: '{b}: {@[' + dimension + ']} ({d}%)'\n            },\n            encode: {\n              value: dimension,\n              tooltip: dimension\n            }\n          }\n        })\n      }\n    })\n    // 数据合并\n    //  const result = _.merge(res.data, this.options)\n    // 5.展示数据\n    myChart.setOption(option)\n  }\n}\n</script>\n\n<style>\ndiv {\n  margin: 0;\n  padding: 0;\n}\n</style>\n"]}]}